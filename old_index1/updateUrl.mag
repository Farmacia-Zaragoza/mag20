<?php
ini_set('max_execution_time', 0);
ini_set('memory_limit', '-1');
set_time_limit(0);
while (@ob_end_flush());
use Magento\Framework\App\Bootstrap;
include('../app/bootstrap.php');


$pprice=$argv[1];
$psku=$argv[2];
if(!empty($pprice) && !empty($psku)){
   updatePrice($pprice,$psku); //call functon to update price with sku and price
}

function updatePrice($price,$sku){ //function for update price
$bootstrap = Bootstrap::create(BP, $_SERVER);
$_objectManager = $bootstrap->getObjectManager();
$state = $_objectManager->get('Magento\Framework\App\State');
$state->setAreaCode('adminhtml');
//sku => update price
$products = [
    $sku => $price
];

echo "Starting...\n";


$_priceProducts = $_objectManager->create('Magento\Catalog\Model\ResourceModel\Product\Collection')->addFieldToFilter('sku', array_keys($products));
$_stockState = $_objectManager->get('\Magento\CatalogInventory\Api\StockStateInterface');
$_stockRegistry = $_objectManager->get('\Magento\CatalogInventory\Api\StockRegistryInterface');

//if any products found
if($_priceProducts) {

    foreach ($_priceProducts as $_product) {
        //$_stock = $_stockState->getStockQty($_product->getId(), $_product->getStore()->getWebsiteId());
        $_sku = $_product->getSku();
        echo sprintf("## Processing %s ##\n", $_sku);
        //do a double check quantity is 0 and product has been set to update
        if ( isset($products[$_sku])) {
			$_product->setUrlKey($products[$_sku]);
            $_product->save();
            echo sprintf("Product had Url..updated to: %s\n", $products[$_sku]);
        }

        echo sprintf("## Finished processing %s ##\n", $_sku);
    }

} else {
    echo sprintf("Url Products found with provided SKU's.\n");
}
exit("Finished.");
}


